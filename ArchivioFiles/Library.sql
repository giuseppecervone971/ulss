CREATE SCHEMA IF NOT EXISTS Biblioteca;

Use Biblioteca;

CREATE TABLE BOOK (
    ISBN        CHAR(12) NOT NULL,             
    PUB_YEAR    INT UNSIGNED,
    LANGUAGE    VARCHAR(20),
    TITLE       VARCHAR(100) NOT NULL,
    ID_EDITOR   INT NOT NULL,
    PRIMARY KEY (ISBN)
);

CREATE TABLE COPY (
    COPY_N      INT UNSIGNED NOT NULL,
    ISBN        CHAR(12) NOT NULL,
    PRIMARY KEY(COPY_N, ISBN),
    FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN) ON DELETE CASCADE
);

CREATE TABLE STUDENT (
    STUDENT_N   INT NOT NULL AUTO_INCREMENT,
    F_NAME      VARCHAR(24) NOT NULL,
    L_NAME      VARCHAR(24) NOT NULL,
    STREET      VARCHAR(50) NOT NULL,
    NUM         INT UNSIGNED NOT NULL,
    CITY        VARCHAR(50) NOT NULL,
    PS          INT(5) UNSIGNED NOT NULL,
    PHONE_N     VARCHAR(15) NOT NULL,
    PRIMARY KEY(STUDENT_N)
);
ALTER TABLE STUDENT AUTO_INCREMENT = 1000000;

CREATE TABLE LIBRARY (
    LIB_ID      CHAR(5) NOT NULL,
    NAME        VARCHAR(50) NOT NULL,
    STREET      VARCHAR(50),
    NUM         INT UNSIGNED,
    CITY        VARCHAR(50),
    PS          INT(5) UNSIGNED,
    TELEPHONE   VARCHAR(15),
    PRIMARY KEY (LIB_ID)
);

CREATE TABLE AUTHOR (
    SSN         INT NOT NULL AUTO_INCREMENT,
    FIRST_NAME  VARCHAR(50) NOT NULL,
    LAST_NAME   VARCHAR(50) NOT NULL,
    PLACE_BIRTH VARCHAR(50),
    DATE_BIRTH  DATE,
    PRIMARY KEY (SSN)
);

CREATE TABLE EDITOR (
    EDITOR_ID   INT NOT NULL,
    NAME        VARCHAR(50) NOT NULL,
    STREET      VARCHAR(50),
    NUM         INT UNSIGNED,
    CITY        VARCHAR(50),
    PS          INT,
    PHONE_N     VARCHAR(15),
    PRIMARY KEY (EDITOR_ID)
);

ALTER TABLE BOOK
    ADD FOREIGN KEY(ID_EDITOR) REFERENCES EDITOR(EDITOR_ID);

CREATE TABLE WRITTEN_BY (
    AUTHOR_ID   INT NOT NULL,
    BOOK_ID     CHAR(12) NOT NULL,
    PRIMARY KEY(AUTHOR_ID, BOOK_ID),
    FOREIGN KEY(AUTHOR_ID) REFERENCES AUTHOR(SSN),
    FOREIGN KEY(BOOK_ID) REFERENCES BOOK(ISBN) ON DELETE CASCADE
);

CREATE TABLE FOUND_IN (
    ID_COPY     INT UNSIGNED NOT NULL,
    ID_BOOK     CHAR(12) NOT NULL,
    LIBRARY_ID  CHAR(5) NOT NULL,
    PRIMARY KEY(ID_COPY, ID_BOOK, LIBRARY_ID),
    FOREIGN KEY(ID_COPY) REFERENCES COPY(COPY_N),
    FOREIGN KEY(ID_BOOK) REFERENCES COPY(ISBN) ON DELETE CASCADE,
    FOREIGN KEY(LIBRARY_ID) REFERENCES LIBRARY(LIB_ID)
);

CREATE TABLE RENTED_BY (
    USER_ID     INT NOT NULL,
    ID_COPY     INT UNSIGNED NOT NULL,
    ISBN        CHAR(12) NOT NULL,
    LIBRARY_ID  CHAR(5) NOT NULL,
    STARTDATE   DATE NOT NULL,
    ENDDATE     DATE NOT NULL,
    PRIMARY KEY(USER_ID, ID_COPY, ISBN, LIBRARY_ID),
    FOREIGN KEY(USER_ID) REFERENCES STUDENT(STUDENT_N) ON DELETE CASCADE,
    FOREIGN KEY(ID_COPY) REFERENCES COPY(COPY_N),
    FOREIGN KEY(LIBRARY_ID) REFERENCES LIBRARY(LIB_ID),
    FOREIGN KEY(ISBN) REFERENCES COPY(ISBN) ON DELETE CASCADE
);

CREATE TABLE IS_AVAILABLE (
    ISBN        CHAR(12) NOT NULL,
    LIB_ID      CHAR(5) NOT NULL,
    N_copies    INT UNSIGNED NOT NULL,
    PRIMARY KEY(ISBN, LIB_ID),
    FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN),
    FOREIGN KEY(LIB_ID) REFERENCES LIBRARY(LIB_ID)
);

